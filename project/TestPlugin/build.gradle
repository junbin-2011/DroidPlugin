apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        targetSdkVersion rootProject.ext.compileSdkVersion
        minSdkVersion rootProject.ext.minSdkVer
    }

    signingConfigs {
        MySignConfig {
            storeFile file(readProperty("key.store", "key.store"))
            keyAlias readProperty("key.alias", "key.alias")
            keyPassword readProperty("key.alias.password", "key.alias.password")
            storePassword readProperty("key.store.password", "key.store.password")
        }
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), "proguard-project.txt"
            signingConfig signingConfigs.MySignConfig
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation project(':DroidPlugin')

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation "com.android.support:gridlayout-v7:28.0.0"
    implementation "com.android.support:cardview-v7:28.0.0"
    implementation "com.android.support:support-v4:28.0.0"
    implementation 'com.android.support:design:28.0.0'
}

//
def readProperty(key, defaultValue) {
    def value = System.getenv(key)
    if (value != null && value.length() > 0) {
        return value
    }

    if (project.hasProperty(key)) {
        return project.property(key)
    }
    return defaultValue
}
